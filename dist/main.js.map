{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bpmn-js/bpmn-js.ts","webpack:///./src/app/props-provider/CustomPaletteProvider.ts","webpack:///./src/app/services/broadcast.service.ts","webpack:///./src/app/services/winery.service.ts","webpack:///./src/app/util/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,4BAA4B,OAAO,kQ;;;;;;;;;;;ACAnC,+BAA+B,uBAAuB,WAAW,cAAc,aAAa,iBAAiB,gBAAgB,gCAAgC,mBAAmB,EAAE,+CAA+C,unB;;;;;;;;;;;;;;;;;;;;;;ACAjL;AACA;AACsF;AAEzD;AACrB;AACP;AAGjD,IAAM,YAAY,GAAG;IACnB,IAAI,EAAE,cAAc;IACpB,GAAG,EAAE,kCAAkC;IACvC,MAAM,EAAE,QAAQ;IAChB,GAAG,EAAE;QACH,QAAQ,EAAE,WAAW;KACtB;IACD,YAAY,EAAE,EAAE;IAChB,KAAK,EAAE;QACL;YACE,MAAM,EAAE,aAAa;YACrB,SAAS,EAAE;gBACT,eAAe;aAChB;YACD,YAAY,EAAE;gBACZ;oBACE,MAAM,EAAE,UAAU;oBAClB,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,QAAQ;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAOF;IAIE,sBAAoB,IAAgB,EAAU,KAAqB,EAAS,aAA4B;QAApF,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAHxG,UAAK,GAAG,oBAAoB,CAAC;IAI7B,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAyBC;;QAxBC,IAAI,CAAC,OAAO,GAAG,IAAI,wDAAO,CAAC;YACzB,SAAS,EAAE,SAAS;YACpB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,OAAO;YACf,iBAAiB,EAAE;gBACjB,sEAAqB;gBACrB,2EAA0B;0BAKzB,GAAC,+DAAc,CAAC,uBAAuB,IAAG,CAAC,MAAM,EAAE,wEAAuB,CAAC;0BAC3E,GAAC,+DAAc,CAAC,eAAe,IAAG,CAAC,MAAM,EAAE,2FAAqB,CAAC;aACnE;YACD,eAAe,EAAE;gBACf,MAAM,EAAE,aAAa;aACtB;YACD,eAAe,EAAE;gBACf,MAAM,EAAE,YAAY;aACrB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM,IAAK,KAAI,CAAC,aAAa,CAAC,eAAe,CAAgB,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;QACzG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAElB,CAAC;IAED,kCAAW,GAAX,UAAY,GAAQ;QAClB,IAAI,GAAG,EAAE;YACP,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;SACnC;IACH,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAYC;QAXC,IAAM,GAAG,GAAG,2BAA2B,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YACjB,OAAO,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,EAAE,YAAY,EAAE,MAAM;SACrD,CAAC,CAAC,SAAS,CACV,UAAC,CAAM;YACL,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC;YAC/C,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;QAE9C,CAAC,EACD,IAAI,CAAC,WAAW,CACjB,CAAC;IACJ,CAAC;IACD,2BAAI,GAAJ;QAEE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE7C,CAAC;IAED,2BAAI,GAAJ;QAAA,iBAMD;QALG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,GAAQ,EAAE,GAAQ;YAAM,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC9F,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAAA,CAAC,CAAC,CAAC;IAGrC,CAAC;IAjEY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAK0B,+DAAU,EAAiB,8DAAc,EAAwB,sEAAa;OAJ7F,YAAY,CAiEvB;IAAD,mBAAC;CAAA;AAjEuB;;;;;;;;;;;;;;;;;;;;;;;;;ACvCsB;AACW;AACjB;AACiB;AACM;AACjB;AACG;AAC6B;AAc/E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa,EAAE,qEAAgB,EAAE,4DAAY,CAAC,OAAO,CAAC,EAAE,CAAC;aAC1D;YACD,SAAS,EAAE,CAAC,4EAAgB,EAAE,sEAAa,EAAE,8DAAW,CAAC;YACzD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACrBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAiD;AACuB;AACL;AACmB;AACH;AACP;AAErE,IAAM,cAAc,GAAG;IAC5B,QAAQ,EAAE,UAAU;IACpB,WAAW,EAAE,aAAa;IAC1B,eAAe,EAAE,iBAAiB;IAClC,SAAS,EAAE,WAAW;IACtB,kBAAkB,EAAE,oBAAoB;IACxC,sBAAsB,EAAE,wBAAwB;IAChD,eAAe,EAAE,iBAAiB;IAClC,uBAAuB,EAAE,yBAAyB;CACnD,CAAC;AAEK,IAAM,OAAO,GAAG,wEAAQ,CAAC;AACzB,IAAM,qBAAqB,GAAG,qDAAsB,CAAC;AACrD,IAAM,YAAY,GAAG,8EAAa,CAAC;AACnC,IAAM,uBAAuB,GAAG,oFAAgB,CAAC;AACjD,IAAM,0BAA0B,GAAG,uEAAuB,CAAC;;;;;;;;;;;;;ACpBlE;AAAA;AAAA;IAME,gFAAgF;IAChF,oFAAoF;IACpF,oGAAoG;IACpG,4FAA4F;IAC5F,kCAAkC;IAClC,+BAAoB,OAAiB,EAAU,uBAAyC,EAAE,cAAc;QAApF,YAAO,GAAP,OAAO,CAAU;QAAU,4BAAuB,GAAvB,uBAAuB,CAAkB;QACtF,wFAAwF;QACxF,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBAYC;QAXC,uGAAuG;QACvG,OAAO;YACL,IAAI,EAAE;gBACJ,KAAK,EAAE,OAAO;gBACd,SAAS,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;gBAC5B,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE;oBACN,KAAK,EAAE,cAAM,cAAO,CAAC,GAAG,CAAE,uCAAuC,EAAE,KAAI,CAAC,cAAc,CAAC,EAA1E,CAA0E;iBACxF;aACF;SACF,CAAC;IACJ,CAAC;IA3BM,6BAAO,GAAG,CAAC,SAAS,EAAE,yBAAyB,EAAE,gBAAgB,CAAC,CAAC;IA4B5E,4BAAC;CAAA;AA9BiC;;;;;;;;;;;;;;;;;;;ACFlC;;;;;;;;;;;;iFAYiF;AACtC;AACJ;AAGvC;;;;GAIG;AAEH;IADA;QAGW,oBAAe,GAAG,IAAI,oDAAO,EAAO,CAAC;QACrC,qBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAEvD,iBAAY,GAAG,IAAI,oDAAO,EAAW,CAAC;QACtC,kBAAa,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAEjD,cAAS,GAAG,IAAI,oDAAO,EAAU,CAAC;QAClC,eAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAE3C,cAAS,GAAG,IAAI,oDAAO,EAAU,CAAC;QAClC,eAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAE3C,iBAAY,GAAG,IAAI,oDAAO,EAAQ,CAAC;QACnC,kBAAa,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAe5D,CAAC;IAbG;;;;;OAKG;IACI,oCAAS,GAAhB,UAAiB,OAAqB,EAAE,IAAS;QAC7C,IAAI;YACA,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtB;IACL,CAAC;IA7BQ,gBAAgB;QAD5B,gEAAU,EAAE;OACA,gBAAgB,CA8B5B;IAAD,uBAAC;CAAA;AA9B4B;;;;;;;;;;;;;ACvB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;iFAYiF;;AAEtC;AAIQ;AACI;AACJ;AAEnD;;;GAGG;AAEH;IAMI,uBAAoB,gBAAkC,EAClC,WAAwB;QAD5C,iBAGC;QAHmB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAf,CAAe,CAAC,CAAC;IACxE,CAAC;IAEM,uCAAe,GAAtB,UAAuB,WAA0B;QAC7C,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;QAE7B,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IAGM,4BAAI,GAAX,UAAY,IAAY;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAM,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;cACvD,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAC/F,IAAI,GAAW,CAAC;QAChB,GAAG,GAAG,0CAA0C;YAC5C,iWAAiW;YACjW,sDAAsD;YACtD,uCAAuC;YACvC,uDAAuD;YACvD,sBAAsB;YACtB,qEAAqE;YACrE,uDAAuD;YACvD,kCAAkC;YAClC,uHAAuH;YACvH,mBAAmB;YACnB,2CAA2C;YAC3C,+DAA+D;YAC/D,kIAAkI;YAClI,6HAA6H;YAC7H,wDAAwD;YACxD,wGAAwG;YACxG,mCAAmC;YACnC,mCAAmC;YACnC,mCAAmC;YACnC,mCAAmC;YACnC,sBAAsB;YACtB,uBAAuB;YACvB,yBAAyB;YACzB,qBAAqB,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAGjC,IAAM,WAAW,GAAG,gDAAgD;cAC9D,2EAA2E;cAC3E,kCAAkC;cAClC,IAAI,GAAG,sDAAsD,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,IAAI,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;QAC3F,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,wEAAwE,EAAE,CAAC,CAAC;QAE9H,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACxE,SAAS,CAAC,kBAAQ,IAAI,cAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAhC,CAAgC,CAAC,CAAC;IACjE,CAAC;IAEM,gCAAQ,GAAf;QAAA,iBAUC;QATG,IAAM,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;cACvD,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAC/F,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzD,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAS,QAAQ,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,KAAK,CAAC;QAAA,CAAC,CAAC,CAAC;IACxB,CAAC;IAEM,iCAAS,GAAhB,UAAiB,OAAW;QAA5B,iBAWC;QAVG,IAAM,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;cACvD,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAC/F,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzD,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAS,QAAQ,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzB,OAAO,KAAK,CAAC;QAAA,CAAC,CAAC,CAAC;IACxB,CAAC;IAIO,8BAAM,GAAd,UAAe,KAAa;QACxB,OAAO,kBAAkB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;IAEO,kCAAU,GAAlB,UAAmB,YAAoB;QACnC,OAAO,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IAC7C,CAAC;IA1GQ,aAAa;QADzB,gEAAU,EAAE;+EAO6B,mEAAgB;YACrB,8DAAW;OAPnC,aAAa,CA2GzB;IAAD,oBAAC;CAAA;AA3GyB;;;;;;;;;;;;;;;;;;;AC3B1B;;;;;;;;;;;;iFAYiF;AACtC;AAEO;AAGlD;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAEM,yBAAG,GAAV,UAAW,GAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,yBAAG,GAAV,UAAW,GAAW,EAAE,IAAS,EAAE,OAAa;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAVQ,WAAW;QADvB,gEAAU,EAAE;+EAEiB,+DAAU;OAD3B,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;;AClBxB;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n\\n<button (click)=\\\"load()\\\">Load <i class=\\\"fa fa-folder-open\\\"></i></button>\\n<button (click)=\\\"save()\\\">Save <i class=\\\"fa fa-save\\\"></i></button>\\n\\n<div class=\\\"modeler\\\">\\n  <div id=\\\"canvas\\\"></div>\\n  <div id=\\\"properties\\\"></div>\\n</div>\\n\"","module.exports = \"#properties {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  right: 0;\\n  width: 260px;\\n  z-index: 10;\\n  border-left: 1px solid #ccc;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFx0aW1tcFxcRGVza3RvcFxcSGl3aVxcaGl3aTItbWFzdGVyXFxoaXdpMi1tYXN0ZXIvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFrQjtFQUNsQixPQUFNO0VBQ04sVUFBUztFQUNULFNBQVE7RUFDUixhQUFZO0VBQ1osWUFBVztFQUNYLDRCQUEyQjtFQUMzQixlQUFjLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcHJvcGVydGllcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMjYwcHg7XG4gIHotaW5kZXg6IDEwO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Modeler, OriginalPropertiesProvider, PropertiesPanelModule, InjectionNames, OriginalPaletteProvider} from \"./bpmn-js/bpmn-js\";\nimport {CustomPropsProvider} from './props-provider/CustomPropsProvider';\nimport {CustomPaletteProvider} from \"./props-provider/CustomPaletteProvider\";\nimport {WineryService} from \"./services/winery.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { PageParameter } from './model/page-parameter';\n\nconst customModdle = {\n  name: \"customModdle\",\n  uri: \"http://example.com/custom-moddle\",\n  prefix: \"custom\",\n  xml: {\n    tagAlias: \"lowerCase\"\n  },\n  associations: [],\n  types: [\n    {\n      \"name\": \"ExtUserTask\",\n      \"extends\": [\n        \"bpmn:UserTask\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"worklist\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n  ]\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'bpmn.io for Winery';\n  modeler;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute,private wineryService: WineryService) {\n  }\n\n  ngOnInit(): void {\n    this.modeler = new Modeler({\n      container: '#canvas',\n      width: '100%',\n      height: '600px',\n      additionalModules: [\n        PropertiesPanelModule,\n        OriginalPropertiesProvider,\n\n        //{[InjectionNames.bpmnPropertiesProvider]: ['type', OriginalPropertiesProvider.propertiesProvider[1]]},\n        //{[InjectionNames.propertiesProvider]: ['type', CustomPropsProvider]},\n\n        {[InjectionNames.originalPaletteProvider]: ['type', OriginalPaletteProvider]},\n        {[InjectionNames.paletteProvider]: ['type', CustomPaletteProvider]},\n      ],\n      propertiesPanel: {\n        parent: '#properties'\n      },\n      moddleExtension: {\n        custom: customModdle\n      }\n    });\n    this.route.queryParams.subscribe(params => {this.wineryService.setRequestParam(<PageParameter>params);});\n    this.initiate();\n    \n  }\n\n  handleError(err: any) {\n    if (err) {\n      console.warn('Ups, error: ', err);\n    }\n  }\n\n  initiate(){\n    const url = '/assets/bpmn/initial.bpmn';\n    this.http.get(url, {\n      headers: {observe: 'response'}, responseType: 'text'\n    }).subscribe(\n      (x: any) => {\n        console.log('Fetched XML, now importing: ', x);\n        this.modeler.importXML(x, this.handleError);\n        \n      },\n      this.handleError\n    );\n  }\n  load(){\n    \n    this.wineryService.loadPlan2(this.modeler);\n    \n  }\n\n  save(): void {\n    this.modeler.saveXML((err: any, xml: any) => {console.log('Result of saving XML: ', err, xml);\n    let temp = JSON.stringify(xml);\n    this.wineryService.save(temp);});\n    \n    \n}}\n","import { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { WineryService } from './services/winery.service';\nimport { BroadcastService } from './services/broadcast.service';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './util/http.service';\nimport {HttpClientModule, HttpClient, HttpHandler} from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule, RouterModule.forRoot([])\n  ],\n  providers: [BroadcastService, WineryService, HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// import _Modeler from 'bpmn-js/lib/Modeler.js';\nimport * as _Modeler from \"bpmn-js/dist/bpmn-modeler.production.min.js\";\nimport * as _PropertiesPanelModule from 'bpmn-js-properties-panel';\nimport * as _BpmnPropertiesProvider from 'bpmn-js-properties-panel/lib/provider/bpmn';\nimport * as _EntryFactory from 'bpmn-js-properties-panel/lib/factory/EntryFactory';\nimport _PaletteProvider from 'bpmn-js/lib/features/palette/PaletteProvider';\n\nexport const InjectionNames = {\n  eventBus: 'eventBus',\n  bpmnFactory: 'bpmnFactory',\n  elementRegistry: 'elementRegistry',\n  translate: 'translate',\n  propertiesProvider: 'propertiesProvider',\n  bpmnPropertiesProvider: 'bpmnPropertiesProvider',\n  paletteProvider: 'paletteProvider',\n  originalPaletteProvider: 'originalPaletteProvider',\n};\n\nexport const Modeler = _Modeler;\nexport const PropertiesPanelModule = _PropertiesPanelModule;\nexport const EntryFactory = _EntryFactory;\nexport const OriginalPaletteProvider = _PaletteProvider;\nexport const OriginalPropertiesProvider = _BpmnPropertiesProvider;\n\nexport interface IPaletteProvider {\n  getPaletteEntries(): any;\n}\n\nexport interface IPalette {\n  registerProvider(provider: IPaletteProvider): any;\n}\n\nexport interface IPropertiesProvider {\n  getTabs(elemnt): any;\n}\n","import {IPalette, IPaletteProvider} from \"../bpmn-js/bpmn-js\";\n\nexport class CustomPaletteProvider implements IPaletteProvider {\n\n  static $inject = ['palette', 'originalPaletteProvider', 'elementFactory'];\n\n  private readonly elementFactory: any;\n\n  // Note that names of arguments must match injected modules, see InjectionNames.\n  // I don't know why originalPaletteProvider matters but it breaks if it isn't there.\n  // I guess since this component is injected, and it requires an instance of originalPaletteProvider,\n  // originalPaletteProvider will be new'ed and thus call palette.registerProvider for itself.\n  // There probably is a better way.\n  constructor(private palette: IPalette, private originalPaletteProvider: IPaletteProvider, elementFactory) {\n    // console.log(this.constructor.name, \"constructing\", palette, originalPaletteProvider);\n    palette.registerProvider(this);\n    this.elementFactory = elementFactory;\n  }\n\n  getPaletteEntries() {\n    // console.log(this.constructor.name, \"getPaletteEntries\", this.palette, this.originalPaletteProvider);\n    return {\n      save: {\n        group: 'tools',\n        className: ['fa-save', 'fa'],\n        title: 'TEST',\n        action: {\n          click: () => console.log( 'TEST Action clicked! Elementfactory: ', this.elementFactory)\n        }\n      }\n    };\n  }\n}\n","/*******************************************************************************\n * Copyright (c) 2017 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n *******************************************************************************/\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Node } from '../model/workflow/node';\n\n/**\n * BroadcastService\n * All of the observable subject should be registered to this service.\n * It provider a broadcast method to broadcast data. the broadcast method would catch error while broadcasting.\n */\n@Injectable()\nexport class BroadcastService {\n\n    public jsPlumbInstance = new Subject<any>();\n    public jsPlumbInstance$ = this.jsPlumbInstance.asObservable();\n\n    public showProperty = new Subject<boolean>();\n    public showProperty$ = this.showProperty.asObservable();\n\n    public planModel = new Subject<Node[]>();\n    public planModel$ = this.planModel.asObservable();\n\n    public saveEvent = new Subject<string>();\n    public saveEvent$ = this.saveEvent.asObservable();\n\n    public nodeProperty = new Subject<Node>();\n    public nodeProperty$ = this.nodeProperty.asObservable();\n\n    /**\n     * broadcast datas\n     * this method will catch the exceptions for the broadcast\n     * @param subject will broadcast data\n     * @param data will be broadcated\n     */\n    public broadcast(subject: Subject<any>, data: any) {\n        try {\n            subject.next(data);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n}\n","/*******************************************************************************\r\n * Copyright (c) 2017-2019 Contributors to the Eclipse Foundation\r\n *\r\n * See the NOTICE file(s) distributed with this work for additional\r\n * information regarding copyright ownership.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\r\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\r\n *******************************************************************************/\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { PageParameter } from '../model/page-parameter';\r\nimport { Node } from '../model/workflow/node';\r\nimport { HttpService } from '../util/http.service';\r\nimport { BroadcastService } from './broadcast.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n/**\r\n * WineryService\r\n * provides operation about winery. It can load and save data from winery.\r\n */\r\n@Injectable()\r\nexport class WineryService {\r\n    private repositoryURL: string;\r\n    private namespace: string;\r\n    private serviceTemplateId: string;\r\n    private plan: string;\r\n\r\n    constructor(private broadcastService: BroadcastService,\r\n                private httpService: HttpService) {\r\n        this.broadcastService.saveEvent$.subscribe(data => this.save(data));\r\n    }\r\n\r\n    public setRequestParam(queryParams: PageParameter) {\r\n        this.repositoryURL = queryParams.repositoryURL;\r\n        this.namespace = queryParams.namespace;\r\n        this.serviceTemplateId = queryParams.id;\r\n        this.plan = queryParams.plan;\r\n\r\n        if (this.repositoryURL) {\r\n            this.loadPlan();\r\n        }\r\n    }\r\n\r\n\r\n    public save(data: string) {\r\n        console.log(data);\r\n        console.log(this.namespace);\r\n        const url = 'servicetemplates/' + this.encode(this.namespace)\r\n            + '/' + this.encode(this.serviceTemplateId) + '/plans/' + this.encode(this.plan) + '/file';\r\n        let xml: string;\r\n        xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\r\n            '<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\\n' +\r\n            '<bpmn:process id=\"Process_1\" isExecutable=\"false\">\\n' +\r\n            '<bpmn:startEvent id=\"StartEvent_1\">\\n' +\r\n            '<bpmn:outgoing>SequenceFlow_0e3dski</bpmn:outgoing>\\n' +\r\n            '</bpmn:startEvent>\\n' +\r\n            '<bpmn:intermediateThrowEvent id=\"IntermediateThrowEvent_14m4gg5\">\\n' +\r\n            '<bpmn:incoming>SequenceFlow_0e3dski</bpmn:incoming>\\n' +\r\n            '</bpmn:intermediateThrowEvent>\\n' +\r\n            '<bpmn:sequenceFlow id=\"SequenceFlow_0e3dski\" sourceRef=\"StartEvent_1\" targetRef=\"IntermediateThrowEvent_14m4gg5\" />\\n' +\r\n            '</bpmn:process>\\n' +\r\n            '<bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\\n' +\r\n            '<bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\\n' +\r\n            '<bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\"><dc:Bounds x=\"173\" y=\"102\" width=\"36\" height=\"36\" />\\n' +\r\n            '</bpmndi:BPMNShape><bpmndi:BPMNShape id=\"IntermediateThrowEvent_14m4gg5_di\" bpmnElement=\"IntermediateThrowEvent_14m4gg5\">\\n' +\r\n            '<dc:Bounds x=\"358\" y=\"135\" width=\"36\" height=\"36\" />\\n' +\r\n            '</bpmndi:BPMNShape><bpmndi:BPMNEdge id=\"SequenceFlow_0e3dski_di\" bpmnElement=\"SequenceFlow_0e3dski\">\\n' +\r\n            '<di:waypoint x=\"209\" y=\"120\" />\\n' +\r\n            '<di:waypoint x=\"284\" y=\"120\" />\\n' +\r\n            '<di:waypoint x=\"284\" y=\"153\" />\\n' +\r\n            '<di:waypoint x=\"358\" y=\"153\" />\\n' +\r\n            '</bpmndi:BPMNEdge>\\n' +\r\n            '</bpmndi:BPMNPlane>\\n' +\r\n            '</bpmndi:BPMNDiagram>\\n' +\r\n            '</bpmn:definitions>';\r\n        console.log(JSON.stringify(xml));\r\n        \r\n        \r\n        const requestData = '-----------------------------7da24f2e50046\\r\\n'\r\n            + 'Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"file.json\\\"\\r\\n'\r\n            + 'Content-type: plain/text\\r\\n\\r\\n'\r\n            + data + '\\r\\n-----------------------------7da24f2e50046--\\r\\n';\r\n        console.log(this.getFullUrl(url));\r\n        let parser = new DOMParser();\r\n        let xmlDoc = parser.parseFromString(xml, \"text/xml\");\r\n        console.log(xmlDoc);\r\n        console.log(xmlDoc.getElementsByTagName('bpmn:startEvent'));\r\n        console.log(xmlDoc.getElementsByTagName('bpmn:sequenceFlow')[0].getAttribute('sourceRef'));\r\n        const headers = new HttpHeaders({ 'Content-Type': 'multipart/form-data; boundary=---------------------------7da24f2e50046' });\r\n\r\n        this.httpService.put(this.getFullUrl(url), requestData, { headers: headers })\r\n            .subscribe(response => console.log('save date success'));\r\n    }\r\n\r\n    public loadPlan() {\r\n        const url = 'servicetemplates/' + this.encode(this.namespace)\r\n            + '/' + this.encode(this.serviceTemplateId) + '/plans/' + this.encode(this.plan) + '/file';\r\n        this.httpService.get(this.getFullUrl(url)).subscribe(response => {\r\n            const nodes = JSON.stringify(response) === '{}' ? [] : <Node[]>response;\r\n            console.log(this.broadcastService.planModel);\r\n            console.log(nodes);\r\n            this.broadcastService.broadcast(this.broadcastService.planModel, nodes);\r\n            console.log(\"hier\");\r\n            return nodes;});\r\n    }\r\n\r\n    public loadPlan2(modeler:any) {\r\n        const url = 'servicetemplates/' + this.encode(this.namespace)\r\n            + '/' + this.encode(this.serviceTemplateId) + '/plans/' + this.encode(this.plan) + '/file';\r\n        this.httpService.get(this.getFullUrl(url)).subscribe(response => {\r\n            const nodes = JSON.stringify(response) === '{}' ? [] : <Node[]>response;\r\n            console.log(this.broadcastService.planModel);\r\n            console.log(nodes);\r\n            this.broadcastService.broadcast(this.broadcastService.planModel, nodes);\r\n            console.log(\"hier\");\r\n            modeler.importXML(nodes);\r\n            return nodes;});\r\n    }\r\n    \r\n\r\n\r\n    private encode(param: string): string {\r\n        return encodeURIComponent(encodeURIComponent(param));\r\n    }\r\n\r\n    private getFullUrl(relativePath: string) {\r\n        return this.repositoryURL + relativePath;\r\n    }\r\n}\r\n","/*******************************************************************************\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n *******************************************************************************/\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n    constructor(private http: HttpClient) {\n    }\n\n    public get(uri: string): Observable<any> {\n        return this.http.get(uri);\n    }\n\n    public put(uri: string, data: any, options?: any): Observable<any> {\n        return this.http.put(uri, data, options);\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}